<form id="subscribe" method="POST" class="max-w-96">
  <div class="flex gap-2 mb-2">
    <label for="email" class="sr-only">Email Address</label>
    <input
      id="email"
      class="block w-full border rounded-md border-grey p-2 text-darkBlue dark:text-white bg-transparent placeholder:text-grey focus:outline-none focus:ring-2 focus:ring-purple shadow-sm site-transition-normal"
      name="email"
      type="email"
      autocomplete="email"
      placeholder="Email Address"
      required
    />
    <button class="site-button md:hover:text-white md:dark:hover:text-darkBlue">Subscribe</button>
  </div>
  <span id="response" class="hidden text-xs">
    <!-- Form submission response handled via JS -->
  </span>
</form>

<script>
  document.addEventListener('astro:page-load', () => {
    const form = document.querySelector('#subscribe') as HTMLFormElement
    const responseMessage = form?.querySelector('#response') as HTMLSpanElement

    /**
     * Handle UI messages based on submission state
     * @param {String} state - 'loading', 'error', 'success'
     * @param {String} message - Message to display
     */
    function handleMessageUI(state: string, message: string) {
      // Reset styles
      responseMessage.classList.remove('hidden')
      responseMessage.classList.remove('text-orange')
      responseMessage.classList.remove('text-green')

      // Set message text based on API response
      responseMessage.textContent = message

      // Set message color based on state
      if (state === 'error') {
        responseMessage.classList.add('text-orange')
      } else if (state === 'success') {
        responseMessage.classList.add('text-green')
      }
    }

    /**
     * Handle email subscription form submission
     * @param e - Event
     */
    async function submit(e: Event) {
      e.preventDefault()

      // Show loading message
      handleMessageUI('loading', 'Subscribing...')

      // Get form data and send to API
      const formData = new FormData(e.target as HTMLFormElement)
      const response = await fetch('/api/subscribe/', {
        method: 'POST',
        body: formData,
      })
      const data = await response.json()

      // Error
      if (data.error) {
        handleMessageUI('error', data.error)
      }

      // Success
      if (data.message) {
        handleMessageUI('success', data.message)
      }

      form?.reset()
    }

    // Submit event listener
    form?.addEventListener('submit', submit)
  })
</script>
