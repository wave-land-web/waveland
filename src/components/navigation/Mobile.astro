---
import { Icon } from 'astro-icon/components'
import TitleLogo from '../TitleLogo.astro'
import ThemeToggle from '../ThemeToggle.astro'
---

<!-- Mobile nav -->
<button id="menu" class="flex items-center gap-2.5 z-20 md:hidden site-link">
  <span class="pt-1">MENU</span>
  <Icon name="tabler:menu" class="site-icon" />
  <Icon name="tabler:x" class="site-icon hidden" />
</button>

<ul
  id="mobile-nav-overlay"
  class="absolute top-[var(--nav-height)] left-0 right-4 z-20 w-full hidden flex-col items-start justify-center bg-white dark:bg-darkBlue"
>
  <TitleLogo />
  <li class="w-full py-6 border-y-[1px]">
    <a href="/#about" class="site-link" aria-label="About">→ ABOUT</a>
  </li>
  <li class="w-full py-6 border-b-[1px]">
    <a href="/#contact" class="site-link" aria-label="Contact">→ CONTACT</a>
  </li>
  <li class="w-full flex gap-8 py-6 border-b-[1px]">
    <ThemeToggle />
    <a
      href="https://www.instagram.com/wavelandweb/"
      target="_blank"
      rel="noopener noreferrer"
      class="site-link"
      aria-label="Instagram"
    >
      <Icon name="tabler:brand-instagram" class="site-icon" /></a
    >
  </li>
</ul>

<script>
  document.addEventListener('astro:page-load', () => {
    /**
     * @todo: COMMENT THIS SHIT
     */
    const body = document.querySelector('body')
    const menu = document.querySelector('#menu')
    const menuIconOpen = document.querySelector('[data-icon="tabler:menu"]')
    const menuIconClose = document.querySelector('[data-icon="tabler:x"]')
    const menuText = document.querySelector('#menu span') as HTMLSpanElement
    const mobileNavOverlay = document.querySelector('#mobile-nav-overlay')
    const mobileNavItems = document.querySelectorAll('#mobile-nav-overlay a')
    let overlayDisplayed = false

    function handleContentUpdate() {
      if (overlayDisplayed) {
        menuText.textContent = 'CLOSE'
        menuIconOpen?.classList.add('hidden')
        menuIconClose?.classList.remove('hidden')
      } else {
        menuText.textContent = 'MENU'
        menuIconOpen?.classList.remove('hidden')
        menuIconClose?.classList.add('hidden')
      }
    }

    function handleMobileNavigationOnClick() {
      overlayDisplayed = !overlayDisplayed

      body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
      mobileNavOverlay?.classList.toggle('hidden')
      mobileNavOverlay?.classList.toggle('flex')
      menu?.setAttribute('aria-expanded', `${overlayDisplayed}`)

      handleContentUpdate()
    }

    function handleMobileNavigationOnResize() {
      if (window.innerWidth >= 768) {
        overlayDisplayed = false

        body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
        mobileNavOverlay?.classList.add('hidden')
        menu?.setAttribute('aria-expanded', `${overlayDisplayed}`)

        handleContentUpdate()
      }
    }

    // Accessibility
    body?.addEventListener('keyup', (event) => {
      if (event.code === 'Escape' && overlayDisplayed) {
        handleMobileNavigationOnClick()
      }
    })

    menu?.addEventListener('click', handleMobileNavigationOnClick)
    window.addEventListener('resize', handleMobileNavigationOnResize)
    mobileNavItems.forEach((item) => {
      if (item.firstElementChild?.tagName !== 'svg') {
        item.addEventListener('click', handleMobileNavigationOnClick)
      }
    })
  })
</script>
