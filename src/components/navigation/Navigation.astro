---
import { Icon } from 'astro-icon/components'
---

<nav class="flex items-center justify-between gap-4 py-4">
  <a href="/" class="relative z-20" title="Wave Land Web" aria-label="Wave Land Web">
    <Icon name="logo" class="w-20 stroke-white stroke-1" />
  </a>

  <!-- Mobile nav -->
  <button class="menu flex items-center gap-4 z-20">
    <span>MENU</span>
    <Icon name="menu" class="w-6 stroke-white stroke-1" />
    <Icon name="close" class="w-4 stroke-white stroke-1 hidden" />
  </button>

  <div
    id="mobile-nav-overlay"
    class="absolute left-0 bottom-0 h-screen w-full z-10 hidden bg-darkBlue p-4"
  >
    <ul class="h-full flex flex-col justify-center items-start">
      <li>
        <a href="/#about" aria-label="About">→ ABOUT</a>
      </li>
      <li>
        <a href="/#contact" aria-label="Contact">→ CONTACT</a>
      </li>
    </ul>
  </div>
</nav>

<script>
  document.addEventListener('astro:page-load', () => {
    const body = document.querySelector('body')
    const menu = document.querySelector('.menu')
    const menuIconOpen = document.querySelector('[data-icon="menu"]')
    const menuIconClose = document.querySelector('[data-icon="close"]')
    const menuText = document.querySelector('.menu span') as HTMLSpanElement
    const mobileNavOverlay = document.querySelector('#mobile-nav-overlay')
    const mobileNavItems = document.querySelectorAll('#mobile-nav-overlay li')
    let overlayDisplayed = false

    function handleContentUpdate() {
      if (overlayDisplayed) {
        menuText.textContent = 'CLOSE'
        menuIconOpen?.classList.add('hidden')
        menuIconClose?.classList.remove('hidden')
      } else {
        menuText.textContent = 'MENU'
        menuIconOpen?.classList.remove('hidden')
        menuIconClose?.classList.add('hidden')
      }
    }

    function handleMobileNavigationOnClick() {
      overlayDisplayed = !overlayDisplayed

      body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
      mobileNavOverlay?.classList.toggle('hidden')
      menu?.setAttribute('aria-expanded', `${overlayDisplayed}`)

      handleContentUpdate()
    }

    function handleMobileNavigationOnResize() {
      if (window.innerWidth >= 768) {
        overlayDisplayed = false

        body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
        mobileNavOverlay?.classList.add('hidden')
        menu?.setAttribute('aria-expanded', `${overlayDisplayed}`)

        handleContentUpdate()
      }
    }

    // Accessibility
    body?.addEventListener('keyup', (event) => {
      if (event.code === 'Escape' && overlayDisplayed) {
        handleMobileNavigationOnClick()
      }
    })

    menu?.addEventListener('click', handleMobileNavigationOnClick)
    window.addEventListener('resize', handleMobileNavigationOnResize)
    mobileNavItems.forEach((item) => item.addEventListener('click', handleMobileNavigationOnClick))
  })
</script>
