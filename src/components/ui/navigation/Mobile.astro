---
import { Icon } from 'astro-icon/components'
import TitleLogo from '../../text/TitleLogo.astro'
import ThemeToggle from '../../ui/ThemeToggle.astro'
---

<!-- Mobile nav -->
<button id="menu" class="flex items-center gap-2.5 z-30 md:hidden site-link no-underline">
  <span class="pt-1 uppercase">Menu</span>
  <Icon name="tabler:menu" class="site-icon" />
  <Icon name="tabler:x" class="site-icon hidden" />
</button>

<div
  id="mobile-nav-overlay"
  class="absolute pt-[var(--nav-height)] top-0 left-0 z-20 h-screen w-full px-4 hidden flex-col items-start bg-white dark:bg-darkBlue"
>
  <TitleLogo class="mb-8" />
  <ul id="mobile-nav-items" class="w-full">
    <li class="w-full py-6 border-y-[1px]">
      <a
        href="/#about"
        class="site-link no-underline flex gap-2 items-center uppercase"
        aria-label="About"><Icon name="tabler:arrow-narrow-right" class="site-icon" />About</a
      >
    </li>
    <li class="w-full py-6 border-b-[1px]">
      <a
        href="/#contact"
        class="site-link no-underline flex gap-2 items-center uppercase"
        aria-label="Contact"><Icon name="tabler:arrow-narrow-right" class="site-icon" />Contact</a
      >
    </li>
    <li class="w-full py-6 border-b-[1px]">
      <a
        href="/blog"
        class="site-link no-underline flex gap-2 items-center uppercase"
        aria-label="Blog"><Icon name="tabler:arrow-narrow-right" class="site-icon" />Blog</a
      >
    </li>
    <li class="w-full flex gap-8 py-6 border-b-[1px]">
      <ThemeToggle />
      <a href="/rss.xml" class="site-link" aria-label="RSS" title="RSS Feed">
        <Icon name="tabler:rss" class="site-icon" /></a
      >
      <a
        href="https://www.instagram.com/wavelandweb/"
        target="_blank"
        rel="noopener noreferrer"
        class="site-link"
        aria-label="Instagram"
        title="Instagram"
      >
        <Icon name="tabler:brand-instagram" class="site-icon" /></a
      >
    </li>
  </ul>
</div>

<script is:inline data-astro-rerun>
  // Grab elements
  const body = document.querySelector('body')
  const menu = document.querySelector('#menu')
  const menuIconOpen = document.querySelector('[data-icon="tabler:menu"]')
  const menuIconClose = document.querySelector('[data-icon="tabler:x"]')
  const menuText = document.querySelector('#menu span')
  const mobileNavOverlay = document.querySelector('#mobile-nav-overlay')
  const mobileNavItems = document.querySelectorAll('#mobile-nav-items a')
  let overlayDisplayed = false

  /**
   * Update the menu text and icons based on the overlay state
   */
  function handleContentUpdate() {
    if (overlayDisplayed) {
      menuText.textContent = 'CLOSE'
      menuIconOpen?.classList.add('hidden')
      menuIconClose?.classList.remove('hidden')
    } else {
      menuText.textContent = 'MENU'
      menuIconOpen?.classList.remove('hidden')
      menuIconClose?.classList.add('hidden')
    }
  }

  /**
   * Handle the mobile navigation click event
   */
  function handleMobileNavigationOnClick() {
    overlayDisplayed = !overlayDisplayed

    body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
    mobileNavOverlay?.classList.toggle('hidden')
    mobileNavOverlay?.classList.toggle('flex')
    menu?.setAttribute('aria-expanded', `${overlayDisplayed}`)

    handleContentUpdate()
  }

  /**
   * Handle the mobile navigation resize event
   */
  function handleMobileNavigationOnResize() {
    if (window.innerWidth >= 768) {
      overlayDisplayed = false

      body?.setAttribute('data-overlay-displayed', `${overlayDisplayed}`)
      mobileNavOverlay?.classList.add('hidden')
      menu?.setAttribute('aria-expanded', `${overlayDisplayed}`)

      handleContentUpdate()
    }
  }

  // Accessibility
  body?.addEventListener('keyup', (event) => {
    if (event.code === 'Escape' && overlayDisplayed) {
      handleMobileNavigationOnClick()
    }
  })

  // Event listeners
  menu?.addEventListener('click', handleMobileNavigationOnClick)
  window.addEventListener('resize', handleMobileNavigationOnResize)
  mobileNavItems.forEach((item) => item.addEventListener('click', handleMobileNavigationOnClick))
</script>
