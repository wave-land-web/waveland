---
import { Icon } from 'astro-icon/components'
import Card from '../components/ui/Card.astro'
import PageHeader from '../components/ui/PageHeader.astro'
import Layout from '../layouts/Layout.astro'

const pricingOptionData = [
  {
    title: 'Foundation',
    monthlyPrice: '$300',
    yearlyPrice: '$255',
    features: [
      {
        title: 'Build a Solid Foundation',
        description: 'Custom design & development for up to 5 pages.',
      },
      {
        title: 'Worry-Free Maintenance',
        description: '3 hours of monthly maintenance to keep everything running smoothly.',
      },
      {
        title: 'Strategic Guidance',
        description: 'One monthly strategy call.',
      },
      {
        title: 'Insightful Analytics',
        description: 'First-party analytics.',
      },
      {
        title: 'Need More Time?',
        description: 'Additional hours billed at our standard hourly rate.',
      },
    ],
    buttonText: 'Get Started',
  },
  {
    title: 'Pro',
    monthlyPrice: '$500',
    yearlyPrice: '$425',
    features: [
      {
        title: 'Grow Your Business',
        description: 'Custom design & development for up to 10 pages.',
      },
      {
        title: 'Enhanced Maintenance',
        description: '5 hours of monthly maintenance for those who want a little extra care.',
      },
      {
        title: 'Weekly Check-Ins',
        description: 'One weekly strategy call.',
      },
      {
        title: 'Insightful Analytics',
        description: 'First-party analytics.',
      },
      {
        title: 'Need More Time?',
        description: 'Additional hours billed at our standard hourly rate.',
      },
    ],
    buttonText: 'Get Started',
  },
  {
    title: 'Enterprise',
    price: 'Custom Pricing',
    features: [
      {
        title: 'Scalable Solutions',
        description: 'Custom design & development for large-scale projects.',
      },
      {
        title: 'Dedicated Support',
        description: '24/7 priority care and customer support.',
      },
      {
        title: 'Advanced Integrations',
        description:
          'Seamlessly integrate advanced APIs, content management systems, and e-commerce solutions.',
      },
      {
        title: 'Custom Strategy & Analytics',
        description:
          'Ongoing brainstorming and analytics to develop a strategy that drives results.',
      },
      {
        title: 'Flexible Add-Ons',
        description: 'Optional add-ons for specialized services.',
      },
    ],
    buttonText: 'Get Started',
  },
]
---

<Layout title="Wave Land Web | Pricing">
  <PageHeader
    title="Pricing"
    subtitle="Choose Your Plan"
    bodyText="Your vision, our expertise. Pick the plan that suits you best."
  />

  <main>
    <section id="pricing-options" class="pt-4">
      <!-- Payment toggle -->
      <label for="toggle" class="flex items-center justify-center mb-8 gap-4 cursor-pointer">
        <span id="monthly" class="text-white transition duration-300">Monthly</span>
        <div class="relative">
          <input id="toggle" type="checkbox" class="sr-only" />
          <div class="block bg-purple w-14 h-8 rounded-full"></div>
          <div
            id="dot"
            class="absolute top-1 left-1 w-6 h-6 bg-white rounded-full transition duration-300"
          >
          </div>
        </div>
        <span id="yearly" class="text-grey transition duration-300">Yearly</span>
      </label>

      <div class="w-full grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        <!-- 1 -->
        <Card
          class="flex flex-col h-auto gap-8 p-8 border border-dashed border-darkGrey hover:border-purple transition duration-300"
        >
          <h3 class="text-purple text-base md:text-lg leading-none">
            {pricingOptionData[0].title}
          </h3>
          <p id="monthly-pricing">
            <span class="text-3xl">{pricingOptionData[0].monthlyPrice}</span> /month
          </p>
          <p id="yearly-pricing" class="hidden">
            <span class="text-3xl">{pricingOptionData[0].yearlyPrice}</span> /month <span
              class="text-grey text-sm">(save 15%)</span
            >
          </p>
          <a href="/#contact" class="site-button text-center text-xl">
            {pricingOptionData[0].buttonText}
          </a>
          <ul>
            {
              pricingOptionData[0].features.map((feature) => (
                <li class="flex gap-4 items-center mb-4 text-grey">
                  <Icon name="tabler:check" class="site-icon text-purple flex-shrink-0" />
                  <div>
                    <span class="text-white">{feature.title}: </span>
                    <span>{feature.description}</span>
                  </div>
                </li>
              ))
            }
          </ul>
        </Card>

        <!-- 2 -->
        <Card
          class="flex flex-col h-auto gap-8 p-8 border border-dashed border-purple transition duration-300"
        >
          <div class="flex items-center justify-between">
            <h3 class="text-purple text-base md:text-lg leading-none">
              {pricingOptionData[1].title}
            </h3>
            <span class="bg-purple text-darkBlue text-xs p-2 uppercase rounded-full shadow-lg"
              >Most Popular</span
            >
          </div>
          <p id="monthly-pricing">
            <span class="text-3xl">{pricingOptionData[1].monthlyPrice}</span> /month
          </p>
          <p id="yearly-pricing" class="hidden">
            <span class="text-3xl">{pricingOptionData[1].yearlyPrice}</span> /month <span
              class="text-grey text-sm">(save 15%)</span
            >
          </p>
          <a href="/#contact" class="site-button text-center text-xl">
            {pricingOptionData[1].buttonText}
          </a>
          <ul>
            {
              pricingOptionData[1].features.map((feature) => (
                <li class="flex gap-4 items-center mb-4 text-grey">
                  <Icon name="tabler:check" class="site-icon text-purple flex-shrink-0" />
                  <div>
                    <span class="text-white">{feature.title}: </span>
                    <span>{feature.description}</span>
                  </div>
                </li>
              ))
            }
          </ul>
        </Card>

        <!-- 3 -->
        <Card
          class="flex flex-col h-auto gap-8 p-8 border border-dashed border-darkGrey hover:border-purple transition duration-300"
        >
          <h3 class="text-purple text-base md:text-lg leading-none">
            {pricingOptionData[2].title}
          </h3>
          <p class="text-3xl">
            {pricingOptionData[2].price}
          </p>
          <a href="/#contact" class="site-button text-center text-xl">
            {pricingOptionData[2].buttonText}
          </a>
          <ul>
            {
              pricingOptionData[2].features.map((feature) => (
                <li class="flex gap-4 items-center mb-4 text-grey">
                  <Icon name="tabler:check" class="site-icon text-purple flex-shrink-0" />
                  <div>
                    <span class="text-white">{feature.title}: </span>
                    <span>{feature.description}</span>
                  </div>
                </li>
              ))
            }
          </ul>
        </Card>
      </div>
    </section>
  </main>
</Layout>

<script>
  const toggle = document.getElementById('toggle') as HTMLInputElement
  const dot = document.getElementById('dot')
  const monthly = document.getElementById('monthly')
  const yearly = document.getElementById('yearly')
  const monthlyPricing = document.querySelectorAll('#monthly-pricing')
  const yearlyPricing = document.querySelectorAll('#yearly-pricing')

  toggle.addEventListener('change', () => {
    if (toggle.checked) {
      // Move the dot to the right
      dot?.classList.add('translate-x-6')

      // Change monthly to grey
      monthly?.classList.remove('text-white')
      monthly?.classList.add('text-grey')

      // Change yearly to white
      yearly?.classList.remove('text-grey')
      yearly?.classList.add('text-white')

      // Show yearly pricing
      monthlyPricing.forEach((price) => price.classList.add('hidden'))
      yearlyPricing.forEach((price) => price.classList.remove('hidden'))
    } else {
      // Move the dot to the left
      dot?.classList.remove('translate-x-6')

      // Change monthly to white
      monthly?.classList.add('text-white')
      monthly?.classList.remove('text-grey')

      // Change yearly to grey
      yearly?.classList.add('text-grey')
      yearly?.classList.remove('text-white')

      // Show monthly pricing
      monthlyPricing.forEach((price) => price.classList.remove('hidden'))
      yearlyPricing.forEach((price) => price.classList.add('hidden'))
    }
  })
</script>
